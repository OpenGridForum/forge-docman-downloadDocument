<?xml version="1.0" encoding="UTF-8"?>
	<!--
		The OGF takes no position regarding the validity or scope of any
		intellectual property or other rights that might be claimed to pertain
		to the implementation or use of the technology described in this
		document or the extent to which any license under such rights might or
		might not be available; neither does it represent that it has made any
		effort to identify any such rights. Copies of claims of rights made
		available for publication and any assurances of licenses to be made
		available, or the result of an attempt made to obtain a general
		license or permission for the use of such proprietary rights by
		implementers or users of this specification can be obtained from the
		OGF Secretariat. The OGF invites any interested party to bring to its
		attention any copyrights, patents or patent applications, or other
		proprietary rights which may cover technology that may be required to
		practice this recommendation. Please address the information to the
		OGF Executive Director. This document and the information contained
		herein is provided on an "As Is" basis and the OGF disclaims all
		warranties, express or implied, including but not limited to any
		warranty that the use of the information herein will not infringe any
		rights or any implied warranties of merchantability or fitness for a
		particular purpose. Copyright (C) Open Grid Forum (2009). All Rights
		Reserved. This document and translations of it may be copied and
		furnished to others, and derivative works that comment on or otherwise
		explain it or assist in its implementation may be prepared, copied,
		published and distributed, in whole or in part, without restriction of
		any kind, provided that the above copyright notice and this paragraph
		are included on all such copies and derivative works. However, this
		document itself may not be modified in any way, such as by removing
		the copyright notice or references to the OGF or other organizations,
		except as needed for the purpose of developing Grid Recommendations in
		which case the procedures for copyrights defined in the OGF Document
		process must be followed, or as required to translate it into
		languages other than English. The limited permissions granted above
		are perpetual and will not be revoked by the OGF or its successors or
		assignees.
	-->
<xsd:schema attributeFormDefault="unqualified"
	elementFormDefault="qualified"
	targetNamespace="http://schemas.ogf.org/jsdl/2009/02/activity-instance"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:wsa="http://www.w3.org/2005/08/addressing" xmlns:jsdl="http://schemas.ggf.org/jsdl/2005/11/jsdl"
	xmlns:ai="http://schemas.ogf.org/jsdl/2009/02/activity-instance"
	xmlns:besf="http://schemas.ggf.org/bes/2006/08/bes-factory" xmlns:urf="http://schema.ogf.org/urf/2003/09/urf">

	<xsd:annotation>
		<xsd:documentation>
			Activity Instance schema document.

			Authors:
			Alexander Papaspyrou, TU Dortmund University
			Philipp Wieder, TU Dortmund University

			History:
			0.2: update w/ feedback from OGF24 WG sessions (March 2009)
			0.1: initial version (February 2009)
		</xsd:documentation>
	</xsd:annotation>

	<xsd:import namespace="http://www.w3.org/2005/08/addressing"
		schemaLocation="http://www.w3.org/2002/ws/addr/ns/ws-addr" />

	<xsd:import namespace="http://schemas.ggf.org/bes/2006/08/bes-factory"
		schemaLocation="../OGSA-BES-WG/bes-factory.xsd" />

	<xsd:import namespace="http://schemas.ggf.org/jsdl/2005/11/jsdl"
		schemaLocation="./jsdl.xsd" />

	<xsd:import namespace="http://schema.ogf.org/urf/2003/09/urf"
		schemaLocation="../UR-WG/ur_v1.xsd"></xsd:import>

	<!--
		===== TYPES ================================================
	-->
	<xsd:complexType name="ActivityDocumentType">
		<xsd:annotation>
			<xsd:documentation>
				Contains an activity's metadata and history and provides a root
				element for every activity. While the metadata part	MAY carry
				information about the activity's creator, purpose, and
				references (i.e. to other activities), the history part SHOULD
				describe the full lifecycle of the activity.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ActivityDescription" type="ai:ActivityDescriptionType"
				minOccurs="0">
			</xsd:element>
			<xsd:element name="ActivityHistory" type="ai:ActivityHistoryType">
			</xsd:element>
			<xsd:any minOccurs="0" namespace="##other" processContents="lax"/>
		</xsd:sequence>
		<xsd:attribute name="id" type="xsd:string">
			<xsd:annotation>
				<xsd:documentation>
				    An identifier for the activity, which MUST be globally
				    unique. It is RECOMMENDED to use Universally Unique
					Identifiers as described in RFC 4122, "A Universally Unique
					IDentifier (UUID) URN Namespace".
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:attribute name="sealed" type="xsd:string" use="optional">
			<xsd:annotation>
				<xsd:documentation>
					Denotes the activity as further unmodifiable, i.e. the
					document MUST NOT be changed anymore.
				</xsd:documentation>
			</xsd:annotation>
		</xsd:attribute>
		<xsd:anyAttribute namespace="##other" processContents="lax"/>
	</xsd:complexType>

	<xsd:complexType name="ActivityDescriptionType">
		<xsd:annotation>
			<xsd:documentation>
				A human-readable description of the activity. This field MAY
				contain information on the activity's creator, purpose, and
				references to other activities, as well as other information.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:any minOccurs="0" namespace="##other" processContents="lax" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="ActivityHistoryType">
		<xsd:annotation>
			<xsd:documentation>
				A record of the activity's history. This record MAY be
				incomplete, but MUST contain one initial and, at some point in
				time, one final record; see also
					/ActivityDocument/ActivityHistory/ActivityHistoryEntry/@category
				Note that, although a final record MAY be written already, the
				activity itself MAY still be modified; see also
					/ActivityDocument/@sealed
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ActivityHistoryEntry" type="ai:ActivityHistoryEntryType"
				maxOccurs="unbounded" />
		</xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="ActivityHistoryEntryType">
		<xsd:sequence>
			<xsd:element name="Status" type="ai:ActivityStatusType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="Definition" type="ai:ActivityDefinitionType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="Dependencies" type="ai:ActivityDependencyType"
				minOccurs="0" maxOccurs="1" />
			<!-- -The EPR of the executing service -->
			<!-- REQ R024x -->
			<xsd:element name="ContainerReference" type="wsa:EndpointReferenceType"
				minOccurs="1" maxOccurs="1" />
			<xsd:element name="ResourceUsage" type="ai:ResourceUsageType"
				minOccurs="0" maxOccurs="1" />
			<xsd:any minOccurs="0" namespace="##other" processContents="lax" />
		</xsd:sequence>
		<xsd:attribute name="timestamp" type="xsd:dateTime" use="required" />
		<xsd:attribute name="category"
			type="ai:ActivityHistoryEntryCategoryType" use="optional" />
		<xsd:anyAttribute namespace="##other" processContents="lax"/>
	</xsd:complexType>

	<xsd:complexType name="ActivityStatusType">
		<xsd:sequence>
			<!--
				State types are defined according to the BES Basic State Model
				(GFD.108, page 7)
			-->
			<!-- REQ R002 -->
			<xsd:element name="State" type="besf:ActivityStatusType"
				minOccurs="1" maxOccurs="1" />
			<!-- Exception -->
			<xsd:element name="Exception" type="ai:ExceptionType"
				minOccurs="0" maxOccurs="1" />
		</xsd:sequence>
	</xsd:complexType>
	<!--
		========================================================================
	-->
	<!-- Exceptions -->
	<!-- REQ R022 -->
	<xsd:complexType name="ExceptionType">
		<xsd:sequence>
			<xsd:any minOccurs="0" namespace="##other" processContents="lax" />
		</xsd:sequence>
	</xsd:complexType>
	<!--
		========================================================================
	-->
	<!--
		The ActivityDefinitionType defines the requirements of an activity,
		i.e. the description template the activity has been created from. The
		template may be changed over time (e.g. due to activity delegation,
		negotiation processes, etc.).
	-->
	<!-- :REQ R001a -->
	<xsd:complexType name="ActivityDefinitionType">
		<xsd:choice>
			<xsd:element ref="jsdl:JobDefinition"></xsd:element>
			<xsd:any namespace="##other" processContents="lax"></xsd:any>
		</xsd:choice>
	</xsd:complexType>
	<!--
		========================================================================
	-->
	<!--
		Link(s) to associated activities. The actual dependency structure (aka
		workflow) should be captured by a different schema and maintained by a
		separate service.
	-->
	<!--
		REQ R001b (and somehow xR026 (depending on the final definition))
	-->
	<xsd:complexType name="ActivityDependencyType">
		<xsd:sequence>
			<xsd:any minOccurs="0" namespace="##other" processContents="lax" />
		</xsd:sequence>
	</xsd:complexType>
	<!--
		========================================================================
	-->
	<!--
		Here the final resource usage is captured (as e.g. defined by RUS)
	-->
	<!--
		:NOTE Per definition this is only the final usage. Continuous usage is
		not captured yet.
	-->
	<!-- REQ R007 -->
	<xsd:complexType name="ResourceUsageType">
		<xsd:choice>
			<xsd:element ref="urf:UsageRecord"></xsd:element>
			<xsd:any namespace="##other" processContents="lax"></xsd:any>
		</xsd:choice>
	</xsd:complexType>
	<!--
		========================================================================
	-->
	<!-- :NOTE This has not been discussed yet. Name should be refined. -->
	<!--
		========================================================================
	-->
	<!--
		An entry in the activity's historic entry can be: - the original one,
		i.e. the one initially submitted, or - the final one (REQ R008a) An
		historic entry without an category attribute is per definitionem an
		interim one.
	-->
	<xsd:simpleType name="ActivityHistoryEntryCategoryType">
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="initial" />
			<xsd:enumeration value="final" />
		</xsd:restriction>
	</xsd:simpleType>
	<!--
		========================================================================
	-->
	<!-- The Activity Document -->
	<xsd:element name="ActivityDocument" type="ai:ActivityDocumentType" />
</xsd:schema>
