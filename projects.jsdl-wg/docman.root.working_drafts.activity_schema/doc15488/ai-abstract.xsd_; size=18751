<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema attributeFormDefault="unqualified"
    elementFormDefault="qualified"
    targetNamespace="http://schemas.ogf.org/jsdl/2009/02/activity-instance"
    xmlns:ai="http://schemas.ogf.org/jsdl/2009/02/activity-instance"
    xmlns:wsa="http://www.w3.org/2005/08/addressing"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <xsd:annotation>
        <xsd:documentation xml:lang="en">
			The OGF takes no position regarding the validity or scope of any
			intellectual property or other rights that might be claimed to
			pertain to the implementation or use of the technology described in
			this document or the extent to which any license under such rights
			might or might not be available; neither does it represent that it
			has made any effort to identify any such rights. Copies of claims of
			rights made	available for publication and any assurances of licenses
			to be made available, or the result of an attempt made to obtain a
			general	license or permission for the use of such proprietary rights
			by implementers or users of this specification can be obtained from
			the OGF Secretariat.
			
			The OGF invites any interested party to bring to its
			attention any copyrights, patents or patent applications, or other
			proprietary rights which may cover technology that may be required
			to practice this recommendation. Please address the information to
			the	OGF Executive Director. 
			
			This document and the information contained	herein is provided on an
			"As Is" basis and the OGF disclaims all	warranties, express or
			implied, including but not limited to any warranty that the use of
			the information herein will not infringe any rights or any implied
			warranties of merchantability or fitness for a particular purpose. 
			
			Copyright (C) Open Grid Forum (2009). All Rights Reserved. 
			
			This document and translations of it may be copied and furnished to
			others, and derivative works that comment on or otherwise explain it
			or assist in its implementation may be prepared, copied, published
			and distributed, in whole or in part, without restriction of any
			kind, provided that the above copyright notice and this paragraph
			are included on all such copies and derivative works. However, this
			document itself may not be modified in any way, such as by removing
			the copyright notice or references to the OGF or other
			organizations, except as needed for the purpose of developing Grid
			Recommendations in which case the procedures for copyrights defined
			in the OGF Document process must be followed, or as required to
			translate it into languages other than English.
			
			The limited permissions granted above are perpetual and will not be
			revoked by the OGF or its successors or assignees.
		</xsd:documentation>
        <xsd:documentation xml:lang="en">
			Abstract Activity Instance schema document.

			Authors:
			Alexander Papaspyrou, TU Dortmund University
			Philipp Wieder, TU Dortmund University

			History:
			1.0:
			0.5: documentation of all elements (October 2009)
			0.4: abstract elements added during OGF 26 (May 2009)
			0.3: update w/ feedback from April/May telecons (May 2009)
			0.2: update w/ feedback from OGF24 WG sessions (March 2009)
			0.1: initial version (February 2009)
		</xsd:documentation>
    </xsd:annotation>
    
    <xsd:import namespace="http://www.w3.org/2005/08/addressing" schemaLocation="http://www.w3.org/2002/ws/addr/ns/ws-addr"/>

    <xsd:element abstract="true" name="State">
    	<xsd:annotation>
    		<xsd:documentation xml:lang="en">
    			Stores a state model instance for the given activity state. In
    			its abstract form, the state model is arbitrary; for concrete
    			renderings of Activity Instance schemas and documents, it MUST
    			be subtyped and concretized. Implementors MAY, however, use an
    			empty type such as &lt;xsd:any&gt;. 
    		</xsd:documentation>
    	</xsd:annotation>
    </xsd:element>
    <xsd:element abstract="true" name="Exception">
    	<xsd:annotation>
    		<xsd:documentation xml:lang="en">
    			Stores an exception model instance for the given activity fault.
    			In its abstract form, the exception model is arbitrary; for
    			concrete renderings of Activity Instance schemas and documents,
    			it MUST	be subtyped and concretized. Implementors MAY, however,
    			use an empty type such as &lt;xsd:any&gt;. 
    		</xsd:documentation>
    	</xsd:annotation>
    </xsd:element>
    
    <xsd:complexType name="ActivityStatusType">
    	<xsd:annotation>
    		<xsd:documentation xml:lang="en">
    			Describes the status of the activity with respect to the
    			enclosing history record. The status of an activity comprises
    			its current state (defined by an appropriate state model) and,
    			if necessary, exception information (as produced by faults
    			generated during the activity's lifecycle). Every status record
    			for an activity MUST contain at least the current state; if an
    			exceptional condition occurs during the activity's lifetime, it
    			SHOULD be also recorded here. Note that the existence of an
    			exception entry is not necessarily coupled to a corresponding
    			exceptional state; a possible connection between these is left
    			to the implementor and SHOULD be described in the concrete state
    			model's documentation.
    		</xsd:documentation>
    	</xsd:annotation>
        <xsd:sequence>
            <xsd:element ref="ai:State">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Denotes the state of the activity instance with respect
            			to the enclosing history record. See also State.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:element>
            <xsd:element ref="ai:Exception" minOccurs="0">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Denotes the exception occured for the activity instance
            			with respect to the enclosing record. See also
            			Exception.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
    
    <xsd:element abstract="true" name="ActivityDefinition">
    	<xsd:annotation>
    		<xsd:documentation xml:lang="en">
    			Defines the requirements of an activity, i.e. the description
    			template the activity has been created from. This template MAY
    			change over time, e.g. if the activity is delegated from one
    			manager to another, transformed from a single activity into a
    			set of activities, or similar actions. For concrete	renderings
    			of Activity Instance schemas and documents, it MUST	be subtyped
    			and concretized. Implementors MAY, however, use an empty type
    			such as &lt;xsd:any&gt;.
    		</xsd:documentation>
    	</xsd:annotation>
    </xsd:element>
    
    <xsd:element abstract="true" name="ActivityDependency">
	    <xsd:annotation>
	    	<xsd:documentation xml:lang="en">
	    		Describes links to associated activities. An actual dependency
	    		structure (e.g. depicting a workflow) SHOULD be captured by an
	    		external schema and maintained by a different service (which MAY
	    		be provided by the manager instance via a separate interface).
	    		Note that for concrete	renderings of Activity Instance schemas
	    		and documents, it MUST	be subtyped	and concretized.
	    		Implementors MAY, however, use an empty type such as &lt;xsd:any&gt;.
	    	</xsd:documentation>
		</xsd:annotation>
	</xsd:element>
    
    <xsd:element abstract="true" name="ResourceUsage">
    	<xsd:annotation>
    		<xsd:documentation xml:lang="en">
    			Captures the final resource usage record for this activity.
    		</xsd:documentation>
    	</xsd:annotation>
    </xsd:element>
    
    <xsd:simpleType name="ActivityHistoryEntryCategoryType">
    	<xsd:annotation>
    		<xsd:documentation xml:lang="en">
    			Describes the category of a historic entry for an activity. The
    			possible options are "initial", "intermediate", and final. 
    		</xsd:documentation>
    	</xsd:annotation>
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="initial">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Denotes the initial history record for a given activity,
            			which MUST be the first one created in the whole record.
            			Note that this is not necessarily the first action taken
            			on a certain activity instance; which events are to be
            			recorded as a history record is implementation-specific.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="intermediate">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Denotes an intermediate history record for a given
            			activity. Such entry MAY NOT be the first or last one
            			created in the whole record.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:enumeration>
            <xsd:enumeration value="final">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Denotes the final history record for a given activity,
            			which MUST be the last one created in the whole record.
            			Note that this does not imply that the activity on its
            			whole may not be modified any more.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:enumeration>
        </xsd:restriction>
    </xsd:simpleType>
    
    <xsd:complexType name="ActivityHistoryEntryType">
    	<xsd:annotation>
    		<xsd:documentation xml:lang="en">
    			Denotes an event in the history of an activity, containing its
    			properties at the time the event occurred. Every entry MUST
    			contain at least a timestamp (as attribute), the status of the
    			activity at this timestamp, and an WS-Adressing endpoint
    			reference to the managing service.  
    		</xsd:documentation>
    	</xsd:annotation>
        <xsd:sequence>
            <xsd:any namespace="##other" processContents="lax">
	        	<xsd:annotation>
	        		<xsd:documentation xml:lang="en">
	        			Provides an extension point for additional attributes in
	        			the	ActivityDocumentType. Concrete implementations MAY
	        			process the	content of such elements in a sensible way,
	        			but---if not understood---MUST leave them unmodified.
	        		</xsd:documentation>
	        	</xsd:annotation>            
            </xsd:any>
            <xsd:element name="Status" type="ai:ActivityStatusType">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Stores the status of the activity instance at the time
            			described by the surrounding history entry. See also
            			ActivityStatusType.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:element>
            <xsd:element ref="ai:ActivityDefinition" minOccurs="0">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Stores the definition of the activity with respect to
            			the enclosing history record. See also
            			ActivityDefinition.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:element>
            <xsd:element ref="ai:ActivityDependency" minOccurs="0">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Stores the dependency definitions for the activity with
            			respect to the enclosing history record. See also
            			ActivityDependency.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:element>
            <xsd:element name="ManagerReference" type="wsa:EndpointReferenceType">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Keeps the endpoint reference of the activity's managing
            			service at the time denoted by the enclosing record. The
            			corresponding service SHOULD expose an interface for
            			managing the activity's state, lifecycle, and execution,
            			but MAY export other (or none of the above)
            			functionality as well.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:element>
            <xsd:element ref="ai:ResourceUsage" minOccurs="0">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Stores the resource usage for this activity with respect
            			to the enclosing history record, which MAY be of the
            			"final" category, but MUST NOT be any other category. By
            			definition, this element is not	intended to track
            			continuous usage information for the activity instance;
            			such information SHOULD be captured by an external
            			schema and stored in the appropriate
            			ActivityHistoryEntryType's extension point.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:element>
        </xsd:sequence>
        <xsd:attribute name="timestamp" type="xsd:dateTime" use="required">
        	<xsd:annotation>
        		<xsd:documentation xml:lang="en">
        			Keeps the timestamp at which this event has occured in the
        			activity's history. occurs in the history entry list. The
        			entries in the whole activity history SHOULD be ordered
        			ascending to their timestamp.
        		</xsd:documentation>
        	</xsd:annotation>
        </xsd:attribute>
        <xsd:attribute name="category" type="ai:ActivityHistoryEntryCategoryType" use="optional">
        	<xsd:annotation>
        		<xsd:documentation xml:lang="en">
        			Denotes the category of this history record. See
        			ActivityHistoryEntryCategoryType for possible values. Note
        			that there MUST exist at least initial and one final entry
        			to describe an activity with its entire lifecycle.
        		</xsd:documentation>
        	</xsd:annotation>
        </xsd:attribute>
        <xsd:anyAttribute namespace="##other" processContents="lax"/>
    </xsd:complexType>

    <xsd:complexType name="ActivityHistoryType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
				A record of the activity's history. This record MAY be
				incomplete, but MUST contain one initial and, at some point in
				time, one final record; see also
					/ActivityDocument/ActivityHistory/ActivityHistoryEntry/@category
				Note that, although a final record MAY be written already, the
				activity itself MAY still be modified.
			</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
            <xsd:element name="ActivityHistoryEntry" type="ai:ActivityHistoryEntryType" maxOccurs="unbounded">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Stores a single event in an activity's history. See also
            			ActivityHistoryEntryType.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

	<xsd:complexType name="ActivityDocumentType">
        <xsd:annotation>
            <xsd:documentation xml:lang="en">
				Contains an activity's meta-data and history and provides a root
				element for every activity. While the meta-data part MAY carry
				information about the activity's creator, purpose, and
				references (i.e. to other activities), the history part SHOULD
				describe the full lifecycle of the activity.
			</xsd:documentation>
        </xsd:annotation>      
        <xsd:sequence>    
            <xsd:element name="ActivityDescription" type="xsd:string" minOccurs="0">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
						Contains a natural-language description of the activity
						and offers means for storing additional information on
						the activity for displaying	purposes (e.g. in a user
						interface). 
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:element>
            <xsd:element name="ActivityHistory" type="ai:ActivityHistoryType">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Stores the history of an activity. See also
            			ActivityHistoryType.
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:element>
            <xsd:any namespace="##other" processContents="lax">
            	<xsd:annotation>
            		<xsd:documentation xml:lang="en">
            			Provides an extension point for additional root elements
            			in the activity document. Concrete implementations MAY
            			process the content of such elements in a sensible way,
            			but---if not understood---MUST leave them unmodified. 
            		</xsd:documentation>
            	</xsd:annotation>
            </xsd:any>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:string">
            <xsd:annotation>
                <xsd:documentation xml:lang="en">
					An identifier for the activity, which MUST be globally
					unique. It is RECOMMENDED to use Universally Unique
					Identifiers as described in RFC 4122, "A Universally Unique
					IDentifier (UUID) URN Namespace".
				</xsd:documentation>
            </xsd:annotation>
        </xsd:attribute>
        <xsd:anyAttribute namespace="##other" processContents="lax">
        	<xsd:annotation>
        		<xsd:documentation xml:lang="en">
        		  Provides an extension point for additional attributes in the
        		  ActivityDocumentType. Concrete implementations MAY process the
        		  content of such elements in a sensible way, but---if not
        		  understood---MUST leave them unmodified.
        		</xsd:documentation>
        	</xsd:annotation>
        </xsd:anyAttribute>
    </xsd:complexType>
    
    <xsd:element name="ActivityDocument" type="ai:ActivityDocumentType">
    	<xsd:annotation>
    		<xsd:documentation xml:lang="en">
    			The document root of an activity instance. Each file SHOULD
    			contain a single activity document only. See also
    			ActivityDocumentType. 
    		</xsd:documentation>
    	</xsd:annotation>
    </xsd:element>
</xsd:schema>
